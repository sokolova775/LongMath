#include "LongNumber.h"
#include "gtest/gtest.h"


TEST(MATH, ADD1){
    LongMath::LongNumber a{"0.011111123123123123123112312312"};
    LongMath::LongNumber b{"-1231242456.122676881236123415236152436512"};
    EXPECT_EQ("-1231242456.1115657581130002921130401242", (a+b).toString());
}

TEST(MATH, ADD2){
    LongMath::LongNumber a{"999999999999,9999999999998"};
    LongMath::LongNumber b{"1000000000000.0000000000002"};
    EXPECT_EQ("2000000000000.0", (a+b).toString());
}

TEST(MATH, ADD3){
    LongMath::LongNumber a{"12314234234231698766786637281766787567650.1876372991872367123987615671976238021"};
    LongMath::LongNumber b{"98763754672534768523786452938745927636408716807687436587643756.62345671525761476596712435971623459134561932745912374519273645129736459127346746763478657436578346585"};
//    bigfloat::precision() = 101;
    EXPECT_EQ("98763754672534768523798767172980159335175503444969203375211406.81109401444485147836588592691385839344561932745912374519273645129736459127346746763478657436578346585", (a+b).toString());
}

TEST(MATH, MUL1){
    LongMath::LongNumber a{"0.000000000007"};
    LongMath::LongNumber b{"-1235676.376"};
    EXPECT_EQ("-0.000008649734632", (a*b).toString());
}

TEST(MATH, MUL2){
    LongMath::LongNumber a{"-1234512671652431234125319263518724538162.91623516253712539127653612166526352717362561765276567716520"};
    LongMath::LongNumber b{"-983764982374235176253912346536491235417926547236237763546725751.283645263547162534179251279654271963549172541928735128375127451291764591263519723619726451023971264519237612549176"};
    EXPECT_EQ("1214470336668923990559068314038839102202252874117680897495560920031939726277348022454933826195668968087.5455566412520028538379286312614689094710926963525509490680330243635325881477091769772767342900409321009804032374550665772131766586584045536918809738158984196966210252758752", (a*b).toString());
}

TEST(MATH, MUL3){
    LongMath::LongNumber a{"1.00000000000000000000000011111123123123123123112312312"};
    LongMath::LongNumber b{"-0.0000000000123612361276127461270000000000000982731928371"};
    EXPECT_EQ("-0.000000000012361236127612746127000001373472263952221999887988214674336011047377310634846836222717584565403752", (a*b).toString());
}

TEST(MATH, DIV1){
    LongMath::LongNumber a{"0.00011111123123123123123112312312"};
    LongMath::LongNumber b{"-1234546545.17281728112351672486512461246541217239712"};
    EXPECT_EQ("-0.0000000000000900016541828136500585567485672158651373853783925253646521508854073476201738", (a/b).toString());
}

TEST(MATH, DIV2){
    LongMath::LongNumber a = -10_ln;
    LongMath::LongNumber b{"-0.0000000000000001"};
    EXPECT_EQ("100000000000000000.0", (a/b).toString());
}

TEST(MATH, DIV3){
    LongMath::LongNumber a{"12456235147681546725176453128745127863457162354769.192346651925349126534961523948715239847512835741928736541726354"};
    LongMath::LongNumber b{"-0.000000"};
    EXPECT_THROW(a/b, std::overflow_error);
}

TEST(MATH, DIV4){
    LongMath::LongNumber a{"0.000001243124313549874659343678"};
    LongMath::LongNumber b{"-0.15245234786516435987238653275643"};
    EXPECT_EQ("-0.0000081541828050385233658626632826928431232024545106895008683249329383791824064168203152431658007", (a/b).toString());
}

TEST(MATH, COM3){
    LongMath::LongNumber a{"987126312.12435124365142"};
    LongMath::LongNumber b{"987126312.124351243651423"};
    LongMath::LongNumber c{"987126312.124351243651427"};
    LongMath::LongNumber d{"987126312.124351243651427"};
    EXPECT_EQ(1, (a != b) && (b < c) && (d == c));
}

TEST(MATH, COM4){
    LongMath::LongNumber a{"987126312.12435124365142"};
    LongMath::LongNumber b{"987126312.124351243651423"};
    LongMath::LongNumber c{"987126312.124351243651427"};
    LongMath::LongNumber d{"987126312.124351243651427"};
    EXPECT_EQ(1, (a != b) && (b < c) && (d == c));
}