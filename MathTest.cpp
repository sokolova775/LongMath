#include "LongNumber.h"
#include "gtest/gtest.h"


TEST(MATH, TEST1){
    LongMath::LongNumber a{"0,0354628376451547623546797645"};
    LongMath::LongNumber b{"-4352143512435124,9187346519783459"};
    EXPECT_EQ("-4352143512435124.8832718143331911376453202355", (a+b).toString());
}

TEST(MATH, TEST2){
    LongMath::LongNumber a = 99999999.9999999499997_ln;
    LongMath::LongNumber b = 100000000000.0000000500003_ln;
    EXPECT_EQ("100100000000.0", (a+b).toString());
}

TEST(MATH, TEST3){
    LongMath::LongNumber a{"87651476164587162354786125347651768324517862354871625476152.00002398471283547198237518236451235761724365712365716237456721364571675618265"};
    LongMath::LongNumber b{"1235419253478126345875123087561276348701235087123640871.7256728645716571345617654198764578165987436587131345643"};
    EXPECT_EQ("87652711583840640481132000470739329600866563589958749117023.72569684928449260654414060224097017421598731583679172667456721364571675618265", (a+b).toString());
}

TEST(MATH, TEST4){
    LongMath::LongNumber a{"0.000000000056"};
    LongMath::LongNumber b{"-124357542.7623546235"};
    EXPECT_EQ("-0.006964022394691858916", (a*b).toString());
}

TEST(MATH, TEST5){
    LongMath::LongNumber a{"-870630958763980576890276284567827659287659082743985679.123451234785167234517623547816253478612354765123764512763547125347152387451276345"};
    LongMath::LongNumber b{"-71326454635217861254761275641276457691345761324576325476154761348734876513476.1526345128734571625697135913487216374565129873456182736598172365987126359129765179645613"};
    EXPECT_EQ("62099019584295293042695754023804655638699591425569695296505621612666510332288350425792387979778598562166956659517462372219844634896.3641474229121275298690659338533775434027684320278468014413173672886912920359840822247311610578235957807882657174223812864902842268615816574562250277321178006971629924485", (a*b).toString());
}

TEST(MATH, TEST6){
    LongMath::LongNumber a{"1.00000002100000304000002156400005300042"};
    LongMath::LongNumber b{"-0.00000000000000236452763546125461812547815247651287465127863"};
    EXPECT_EQ("-0.0000000000000023645276851163421509758879239996495855639988374753577633654462593948692451209270246", (a*b).toString());
}

TEST(MATH, TEST7){
    LongMath::LongNumber a{"0.0012374612786347"};
    LongMath::LongNumber b{"12341234123.873645127634"};
    EXPECT_EQ("0.00000000000010027046454299724471780954808627925946764397963753168257727711662488294237978671547679395", (a/b).toString());
}

TEST(MATH, TEST8){
    LongMath::LongNumber a{"0.000000000000000000000000051698788284564229679463043254372678347863256931304931640625"};
    LongMath::LongNumber b{-16, 110};
    EXPECT_EQ("-0.0000000000000000000000000032311742677852643549664402033982923967414535582065582275390625", (a/b).toString());
}

TEST(MATH, TEST9){
    LongMath::LongNumber a = -100_ln;
    LongMath::LongNumber b{"-0.00000000001"};
    EXPECT_EQ("10000000000000.0", (a/b).toString());
}

TEST(MATH, TEST10){
    LongMath::LongNumber a{"0"};
    LongMath::LongNumber b{"-0.000000"};
    EXPECT_THROW(a/b, std::overflow_error);
}

TEST(MATH, TEST11){
    LongMath::LongNumber a{"0.0536452635463234234234"};
    LongMath::LongNumber b{"-0.0126357612536712532514356124351243"};
    a/=b;
    EXPECT_EQ("-4.24551101190971595137734643449157735471626871134940683930560922331618034540408766373138246294566150014", a.toString());
}

TEST(MATH, TEST12){
    LongMath::LongNumber a{"34657834657.123414343"};
    LongMath::LongNumber b{"-64657834657.123414343"};
    EXPECT_EQ(true, a >= b);
}

TEST(MATH, TEST13){
    LongMath::LongNumber a{"-34657834657.123414343"};
    LongMath::LongNumber b{"-34657834657.12341434367"};
    EXPECT_EQ(true, a >= b);
}
TEST(MATH, TEST14){
    LongMath::LongNumber a{"34657834657.123414343"};
    LongMath::LongNumber b{"34657834657.12341434367"};
    EXPECT_EQ(false, b <= a || !(b!=a));
}

TEST(MATH, TEST15){
    LongMath::LongNumber a{"34657834657.123414343"};
    LongMath::LongNumber b{"-64657834657.123414343"};
    LongMath::LongNumber c{"0.0"};
    EXPECT_EQ(true, a >= c && c > b && !(c > c));
}